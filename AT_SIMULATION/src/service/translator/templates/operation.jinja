type {{ template_name }} struct {
	UsageName string
	HasTriggered bool
	CurrentTick int
	Duration int
	IsActive bool

	{% for param in params %}
	{{ param.name }} *{{ param.type }}
	{% endfor %}
}

func (t *{{ template_name }}) Execute() {
	if t.CurrentTick > t.Duration {
		{{ body_after }}

		t.IsActive = false
		t.CurrentTick = 0
		t.HasTriggered = true
	}

	if !t.IsActive && {{ condition }} {
		t.IsActive = true

		{{ body_before }}

		t.CurrentTick += 1
		t.HasTriggered = true
		return 
	}

	t.HasTriggered = false
}

func (t *{{ template_name }}) MarshalJSON() ([]byte, error) {
	return json.Marshal(map[string]interface{}{
		"usage_name":    t.UsageName,
		"has_triggered": t.HasTriggered,
	})
}