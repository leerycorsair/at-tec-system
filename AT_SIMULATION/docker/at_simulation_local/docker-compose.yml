version: "3.9"

services:
  server: 
    container_name: at_simulation_server
    build:
      context: ../..
      dockerfile: ./docker/base/Dockerfile
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - custom-network
    environment:
      DB_HOST: postgres_simulation
      DB_PORT: 5436   
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      SERVER_PORT: ${SERVER_PORT}
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_PORT: ${RABBITMQ_PORT}

      MINIO_HOST: ${MINIO_HOST}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET_NAME: ${MINIO_BUCKET_NAME}
      MINIO_SECURE: ${MINIO_SECURE}
      MINIO_API_PORT: ${MINIO_API_PORT}
      MINIO_CONSOLE_PORT: ${MINIO_CONSOLE_PORT}
    depends_on:
      postgres_simulation:
        condition: service_healthy
    
  postgres_simulation:
    container_name: at_simulation_db
    image: "postgres:alpine"
    expose:
      - "5436"
    ports:
      - "5436:5436"  
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    restart: unless-stopped
    networks:
      - custom-network
    healthcheck:
      test: pg_isready --dbname=$DB_NAME --username=$DB_USER --host=localhost --port=5436
      interval: 10s  
      timeout: 5s
      retries: 10 
    volumes:
      - postgres-data:/var/lib/postgresql/data
    command: ["postgres", "-c", "port=5436"]

  minio:
    container_name: at_minio
    image: "minio/minio:latest"
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}" --address ":${MINIO_API_PORT}"
    ports:
      - "${MINIO_API_PORT}:${MINIO_API_PORT}"
      - "${MINIO_CONSOLE_PORT}:${MINIO_CONSOLE_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    volumes:
      - minio-data:/data
    restart: unless-stopped
    networks:
      - custom-network

networks:
  custom-network:
    external: true

volumes:
  postgres-data:
  minio-data:
